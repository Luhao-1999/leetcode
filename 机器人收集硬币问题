#机器人硬币
import numpy as np
#输入几行几列
i = int(input("输入行的数量"))
j = int(input("输入列的数量"))
a = np.zeros(shape=(i,j))
roods = []#用来存放路径
#放硬币，有硬币为1，无硬币为0
for row in range(0,i):
    for col in range(0,j):
        str = "第{}行第{}列是否有硬币，有硬币为1，无硬币为0".format(row+1,col+1)
        a[row][col] = int(input(str))
# print(a)
# 初始化第一行和第一列
for col in range(1,j):
    a[0][col] = a[0][col] + a[0][col-1]
for row in range(1,i):
    a[row][0] = a[row][0] + a[row-1][0]
# print(a)
#完成剩下的空
res = 0#记录最大硬币数
for row in range(1,i):
    for col in range(1,j):
        a[row][col] = max(a[row-1][col],a[row][col-1])+a[row][col]
        if a[row][col] > res:
            res = a[row][col]
print("%s %d"%("最大硬币数为",res))
row = i-1
col = j-1
roods.append("({},{})".format(row+1,col+1))
while row != 0 and col != 0:
    if a[row][col-1] > a[row-1][col]:
        col = col - 1
        roods.append("({},{})".format(row+1,col+1))
    elif a[row][col-1] <= a[row-1][col]:
        row = row -1
        roods.append("({},{})".format(row+1,col+1))
#考虑到在第一行或者第一列还没到起点的情况
while row != 0:
    row = row - 1
    roods.append("({},{})".format(row + 1, 1))
while col != 0:
    col = col - 1
    roods.append("({},{})".format(1, col+1))
print("路径为: ",end='')
for i in range(len(roods)-1,-1,-1):
    print(roods[i],end=' ')
