class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        res = []
        for i in range(0,len(numbers)):
            if (target-numbers[i]) in numbers:
                res.append(i+1)
                ind = numbers.index(target-numbers[i],i+1)
                res.append(ind+1)
                return res
            elif target == numbers:
                res.append(numbers.index(target)+1)
                return res
                
               上一种方法速度太慢，占用内存太大，改用下一种方法
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        i = 0
        j = len(numbers)-1
        while i<j:
            if (numbers[i]+numbers[j]) == target:
                return [i+1,j+1]
            elif (numbers[i]+numbers[j]) > target:
                j -=1
            else:
                i +=1
        return []
        这种方法用时少，但占用内存还是多
